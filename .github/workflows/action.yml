name: Docker Image CI

on:
  push:
    tags:
      - '*'
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{secrets.DOCKERHUB_USERNAME}}/${{secrets.REPO_NAME}}
          #  ghcr.io/${{secrets.DOCKERHUB_USERNAME}}/${{secrets.REPO_NAME}}          
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          
  vulnerability:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'docker.io/${{secrets.DOCKERHUB_USERNAME}}/${{secrets.REPO_NAME}}:${{ github.ref_name }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  modifygit:
    needs: vulnerability
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Changing the deployment of git repo
        with:
          repository: ${{ secrets.GIT_REPO }}
          token: ${{ secrets.GIT_TOKEN }}
          ref: main
          
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: modify the image tag
        run: |
          git config user.email ${{ secrets.EMAIL }}
          git config user.name ${{ secrets.GIT_USERNAME }}
          sed -i "s+hscrystal/app1.*+hscrystal/app1:$RELEASE_VERSION+g" manifest/deployment.yaml
          cat manifest/deployment.yaml
          git add .
          git commit -m "Done  by Github Actions Job change images tag $RELEASE_VERSION"
          git push
